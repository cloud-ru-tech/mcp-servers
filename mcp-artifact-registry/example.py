#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è MCP Artifact Registry Server –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Cloud.ru API

–≠—Ç–æ—Ç —Ñ–∞–π–ª –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–µ—Å—Ç—Ä–∞–º–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤.
"""

import asyncio
import os
from server import CloudRuConfig, CloudRuClient


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ API"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    key_id = os.getenv("CLOUD_RU_KEY_ID")
    secret = os.getenv("CLOUD_RU_SECRET") 
    project_id = os.getenv("CLOUD_RU_PROJECT_ID")
    
    if not all([key_id, secret, project_id]):
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ–æ–±—Ö–æ–¥–∏–º—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
        print("   CLOUD_RU_KEY_ID")
        print("   CLOUD_RU_SECRET")
        print("   CLOUD_RU_PROJECT_ID")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –∫–ª–∏–µ–Ω—Ç
    config = CloudRuConfig(
        key_id=key_id,
        secret=secret,
        project_id=project_id
    )
    
    client = CloudRuClient(config)
    
    try:
        print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Cloud.ru Artifact Registry API")
        print("=" * 50)
        
        # 1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–µ–µ—Å—Ç—Ä–æ–≤
        print("\nüì¶ 1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–µ–µ—Å—Ç—Ä–æ–≤:")
        registries = await client.list_registries(page_size=10)
        
        if registries.get("registries"):
            for registry in registries["registries"]:
                print(f"   ‚Ä¢ {registry['name']} ({registry['registryType']})")
                print(f"     ID: {registry['id']}")
                print(f"     –°—Ç–∞—Ç—É—Å: {registry.get('status', 'N/A')}")
        else:
            print("   –†–µ–µ—Å—Ç—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–π
        print("\n‚öôÔ∏è 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–π:")
        operations = await client.list_operations(page_size=5)
        
        if operations.get("operations"):
            for op in operations["operations"]:
                status = "‚úÖ DONE" if op.get("done") else "‚è≥ IN_PROGRESS"
                print(f"   ‚Ä¢ {op.get('description', 'N/A')} - {status}")
                print(f"     ID: {op['id']}")
        else:
            print("   –û–ø–µ—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # 3. –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–µ–µ—Å—Ç—Ä—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –ø–µ—Ä–≤–æ–≥–æ
        if registries.get("registries"):
            first_registry = registries["registries"][0]
            registry_id = first_registry["id"]
            
            print(f"\nüîç 3. –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–µ—Å—Ç—Ä–µ {registry_id}:")
            registry_details = await client.get_registry(registry_id)
            
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {registry_details['name']}")
            print(f"   –¢–∏–ø: {registry_details['registryType']}")
            print(f"   –ü—É–±–ª–∏—á–Ω—ã–π: {'–î–∞' if registry_details.get('isPublic') else '–ù–µ—Ç'}")
            print(f"   –ö–∞—Ä–∞–Ω—Ç–∏–Ω: {registry_details.get('quarantineMode', 'N/A')}")
            print(f"   –°–æ–∑–¥–∞–Ω: {registry_details.get('createdAt', 'N/A')}")
            
            # 4. –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–µ–µ—Å—Ç—Ä–∞
            print(f"\nüìã 4. –û–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è —Ä–µ–µ—Å—Ç—Ä–∞ {registry_details['name']}:")
            try:
                registry_ops = await client.get_registry_operations(registry_id, page_size=3)
                
                if registry_ops.get("operations"):
                    for op in registry_ops["operations"]:
                        status = "‚úÖ DONE" if op.get("done") else "‚è≥ IN_PROGRESS"
                        print(f"   ‚Ä¢ {op.get('description', 'N/A')} - {status}")
                else:
                    print("   –û–ø–µ—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            except Exception as e:
                print(f"   –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π: {e}")
        
        print("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        await client.close()


if __name__ == "__main__":
    print("üì¶ Cloud.ru Artifact Registry API Demo")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    print("- CLOUD_RU_KEY_ID")
    print("- CLOUD_RU_SECRET")
    print("- CLOUD_RU_PROJECT_ID")
    print()
    
    asyncio.run(main()) 