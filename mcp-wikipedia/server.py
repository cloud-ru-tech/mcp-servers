import uvicorn
from starlette.applications import Starlette
from starlette.requests import Request
from starlette.routing import Route, Mount

from mcp.server.fastmcp import FastMCP
from mcp.server.sse import SseServerTransport

from tools.wikipedia_tools import register_tools


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä MCP —Å–µ—Ä–≤–µ—Ä–∞ —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º "wikipedia"
mcp = FastMCP("wikipedia")

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ MCP –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
register_tools(mcp)


async def handle_sse(request: Request):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ SSE —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –¥–ª—è MCP"""
    sse = SseServerTransport("/messages")
    return await sse.handle_sse(request, mcp.create_session())


def create_server() -> Starlette:
    """–°–æ–∑–¥–∞–Ω–∏–µ Starlette –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å MCP —Å–µ—Ä–≤–µ—Ä–æ–º"""
    
    # –°–ø–∏—Å–æ–∫ –º–∞—Ä—à—Ä—É—Ç–æ–≤
    routes = [
        Route("/sse", handle_sse),
        Mount("/", mcp.create_app())
    ]
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = Starlette(routes=routes)
    
    return app


if __name__ == "__main__":
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = create_server()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    print("üöÄ –ó–∞–ø—É—Å–∫ MCP Wikipedia —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É 8003...")
    print("üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:")
    print("   - search_wikipedia: –ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π")
    print("   - get_wikipedia_summary: –ö—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏")
    print("   - get_wikipedia_content: –ü–æ–ª–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏")
    print("   - get_wikipedia_sections: –†–∞–∑–¥–µ–ª—ã —Å—Ç–∞—Ç—å–∏")
    print("   - get_wikipedia_links: –°—Å—ã–ª–∫–∏ –∏–∑ —Å—Ç–∞—Ç—å–∏")
    print("üåê –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —è–∑—ã–∫–∏: ru, en, de, fr, es, it, pt, ja, zh")
    print("üì° SSE endpoint: http://localhost:8003/sse")
    
    uvicorn.run(
        app,
        host="0.0.0.0",
        port=8003,
        log_level="info"
    ) 