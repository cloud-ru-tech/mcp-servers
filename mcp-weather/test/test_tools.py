#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã MCP —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–≥–æ–¥—ã.
–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º Open-Meteo API.
"""

import sys
import os
import asyncio
import pytest

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ path –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ server.py
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from server import get_today_weather, get_weekly_forecast


@pytest.mark.asyncio
async def test_today_weather():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"""
    print("üå§Ô∏è –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:")
    print("=" * 50)
    
    try:
        result = await get_today_weather("–ú–æ—Å–∫–≤–∞")
        print(result)
        print()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        print()


@pytest.mark.asyncio
async def test_weekly_forecast():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ –Ω–∞ –Ω–µ–¥–µ–ª—é"""
    print("üìÖ –¢–µ—Å—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –Ω–∞ –Ω–µ–¥–µ–ª—é:")
    print("=" * 50)
    
    try:
        result = await get_weekly_forecast("–õ–æ–Ω–¥–æ–Ω")
        print(result)
        print()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        print()


@pytest.mark.asyncio
async def test_different_cities():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≥–æ—Ä–æ–¥–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏"""
    print("üåç –¢–µ—Å—Ç —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤:")
    print("=" * 50)
    
    cities = [
        "–ü–∞—Ä–∏–∂", 
        "New York", 
        "Êù±‰∫¨", 
        "S√£o Paulo", 
        "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
        "Los Angeles"
    ]
    
    for city in cities:
        try:
            print(f"\n--- –ü–æ–≥–æ–¥–∞ —Å–µ–≥–æ–¥–Ω—è –≤ {city} ---")
            result = await get_today_weather(city)
            print(result)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –¥–ª—è {city}: {e}")


@pytest.mark.asyncio
async def test_consistency():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–¥–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞"""
    print("üîÑ –¢–µ—Å—Ç –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö:")
    print("=" * 50)
    
    city = "–ë–µ—Ä–ª–∏–Ω"
    
    try:
        print(f"–ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è {city}:")
        result1 = await get_today_weather(city)
        print(result1[:100] + "...")
        
        print(f"\n–í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å –¥–ª—è {city}:")
        result2 = await get_today_weather(city)
        print(result2[:100] + "...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã
        print("\n–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–¥–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –ø–æ–ª—É—á–µ–Ω—ã")
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")


@pytest.mark.asyncio
async def test_error_handling():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫"""
    print("‚ö†Ô∏è –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫:")
    print("=" * 50)
    
    # –¢–µ—Å—Ç —Å –ø—É—Å—Ç—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≥–æ—Ä–æ–¥–∞
    try:
        result = await get_today_weather("")
        print(result)
    except Exception as e:
        print(f"–û–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è –ø—É—Å—Ç–æ–≥–æ –≥–æ—Ä–æ–¥–∞: {e}")
    
    # –¢–µ—Å—Ç —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
    try:
        result = await get_today_weather("   ")
        print(result)
    except Exception as e:
        print(f"–û–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è –ø—Ä–æ–±–µ–ª–æ–≤: {e}")
        
    print()


@pytest.mark.asyncio
async def test_unicode_cities():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–æ—Ä–æ–¥–∞ —Å unicode —Å–∏–º–≤–æ–ª–∞–º–∏"""
    print("üåê –¢–µ—Å—Ç –≥–æ—Ä–æ–¥–æ–≤ —Å unicode —Å–∏–º–≤–æ–ª–∞–º–∏:")
    print("=" * 50)
    
    unicode_cities = [
        "Âåó‰∫¨",  # –ü–µ–∫–∏–Ω
        "M√ºnchen",  # –ú—é–Ω—Ö–µ–Ω  
        "S√£o Paulo",  # –°–∞–Ω-–ü–∞—É–ª—É
        "–ú–æ—Å–∫–≤–∞",  # –ú–æ—Å–∫–≤–∞
        "ÿßŸÑÿπŸäŸÜ"  # –ê–ª—å-–ê–π–Ω
    ]
    
    for city in unicode_cities:
        try:
            print(f"\n--- –ü–æ–≥–æ–¥–∞ –≤ {city} ---")
            result = await get_today_weather(city)
            print(result[:150] + "...")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –¥–ª—è {city}: {e}")


async def run_all_tests():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã –≤ –æ–¥–Ω–æ–º event loop"""
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ MCP —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–≥–æ–¥—ã")
    print("=" * 60)
    print("üõ†Ô∏è –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–≤–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ —Å –ª—é–±—ã–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏:")
    print("   - get_today_weather(city)")
    print("   - get_weekly_forecast(city)")
    print("üåç –¢–µ–ø–µ—Ä—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –ª—é–±—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–æ–≤!")
    print()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã –≤ –æ–¥–Ω–æ–º event loop
    await test_today_weather()
    await test_weekly_forecast()
    await test_different_cities()
    await test_consistency()
    await test_unicode_cities()
    await test_error_handling()
    
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
    asyncio.run(run_all_tests())


if __name__ == "__main__":
    main() 