# =============================================================================
# Simple MCP Server Projects - Main Makefile
# =============================================================================

.PHONY: help weather-build weather-run weather-stop weather-logs weather-test weather-shell weather-clean \
        search-build search-run search-stop search-logs search-test search-shell search-clean \
        ip-build ip-run ip-stop ip-logs ip-test ip-shell ip-clean \
        yandex-build yandex-run yandex-stop yandex-logs yandex-test yandex-shell yandex-clean

# Default target
help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "üîß Simple MCP Server Projects"
	@echo "=============================="
	@echo ""
	@echo "üå§Ô∏è  MCP Weather Server Commands:"
	@echo "üîç MCP Search Server Commands:"
	@echo "üåê MCP IP Server Commands:"
	@echo "üîç MCP Yandex Search Server Commands:"
	@echo ""
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "  \033[36m%-20s\033[0m %s\n", $$1, $$2}'
	@echo ""

# =============================================================================
# MCP Weather Server Commands
# =============================================================================

weather-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑ –¥–ª—è MCP Weather —Å–µ—Ä–≤–µ—Ä–∞
	@echo "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞ –¥–ª—è MCP Weather..."
	cd mcp-weather && docker build -t mcp-weather:latest .
	@echo "‚úÖ Docker –æ–±—Ä–∞–∑ mcp-weather:latest –≥–æ—Ç–æ–≤!"

weather-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å MCP Weather —Å–µ—Ä–≤–µ—Ä –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üöÄ –ó–∞–ø—É—Å–∫ MCP Weather —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-weather && docker-compose up -d
	@echo "‚úÖ MCP Weather —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!"
	@echo "üåê –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8001"
	@echo "üì° SSE endpoint: http://localhost:8001/sse"
	@echo "üìß Messages endpoint: http://localhost:8001/messages/"

weather-run-build: ## –°–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å MCP Weather —Å–µ—Ä–≤–µ—Ä
	@echo "üî® –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ MCP Weather —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-weather && docker-compose up -d --build
	@echo "‚úÖ MCP Weather —Å–µ—Ä–≤–µ—Ä —Å–æ–±—Ä–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω!"
	@echo "üåê –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8001"

weather-stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å MCP Weather —Å–µ—Ä–≤–µ—Ä
	@echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ MCP Weather —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-weather && docker-compose down
	@echo "‚úÖ MCP Weather —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"

weather-restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å MCP Weather —Å–µ—Ä–≤–µ—Ä
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ MCP Weather —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-weather && docker-compose restart
	@echo "‚úÖ MCP Weather —Å–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!"

weather-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ MCP Weather —Å–µ—Ä–≤–µ—Ä–∞
	@echo "üìÑ –õ–æ–≥–∏ MCP Weather —Å–µ—Ä–≤–µ—Ä–∞:"
	cd mcp-weather && docker-compose logs -f

weather-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å MCP Weather –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	@echo "üìä –°—Ç–∞—Ç—É—Å MCP Weather —Å–µ—Ä–≤–µ—Ä–∞:"
	cd mcp-weather && docker-compose ps

weather-test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã MCP Weather –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ MCP Weather..."
	cd mcp-weather && docker-compose exec mcp-weather uv run pytest test/test_weather_api.py -v || \
	docker run --rm -v $(PWD)/mcp-weather:/app -w /app mcp-weather:latest uv run pytest test/test_weather_api.py -v
	@echo "‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"

weather-shell: ## –û—Ç–∫—Ä—ã—Ç—å shell –≤ MCP Weather –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üêö –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MCP Weather –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É..."
	cd mcp-weather && docker-compose exec mcp-weather /bin/bash || \
	docker run --rm -it -v $(PWD)/mcp-weather:/app -w /app mcp-weather:latest /bin/bash

weather-clean: ## –û—á–∏—Å—Ç–∏—Ç—å Docker —Ä–µ—Å—É—Ä—Å—ã MCP Weather
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
	cd mcp-weather && docker-compose down -v --remove-orphans
	docker rmi mcp-weather:latest 2>/dev/null || true
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

weather-dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å MCP Weather –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (—Å –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–æ–π)
	@echo "üîß –ó–∞–ø—É—Å–∫ MCP Weather –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	cd mcp-weather && docker-compose -f docker-compose.yml up --build

# =============================================================================
# –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
# =============================================================================

weather-health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ MCP Weather —Å–µ—Ä–≤–µ—Ä–∞
	@echo "ü©∫ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è MCP Weather —Å–µ—Ä–≤–µ—Ä–∞..."
	@curl -s -I http://localhost:8001/sse | head -1 || echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

weather-demo: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é MCP Weather
	@echo "üé≠ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è MCP Weather..."
	cd mcp-weather && docker-compose exec mcp-weather make test-demo || \
	docker run --rm -v $(PWD)/mcp-weather:/app -w /app mcp-weather:latest uv run python test/test_tools.py

# =============================================================================
# MCP Search Server Commands
# =============================================================================

search-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑ –¥–ª—è MCP Search —Å–µ—Ä–≤–µ—Ä–∞
	@echo "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞ –¥–ª—è MCP Search..."
	cd mcp-search && docker build -t mcp-search:latest .
	@echo "‚úÖ Docker –æ–±—Ä–∞–∑ mcp-search:latest –≥–æ—Ç–æ–≤!"

search-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å MCP Search —Å–µ—Ä–≤–µ—Ä –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üöÄ –ó–∞–ø—É—Å–∫ MCP Search —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-search && docker-compose up -d
	@echo "‚úÖ MCP Search —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!"
	@echo "üåê –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8002"
	@echo "üì° SSE endpoint: http://localhost:8002/sse"
	@echo "üìß Messages endpoint: http://localhost:8002/messages/"

search-run-build: ## –°–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å MCP Search —Å–µ—Ä–≤–µ—Ä
	@echo "üî® –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ MCP Search —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-search && docker-compose up -d --build
	@echo "‚úÖ MCP Search —Å–µ—Ä–≤–µ—Ä —Å–æ–±—Ä–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω!"
	@echo "üåê –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8002"

search-stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å MCP Search —Å–µ—Ä–≤–µ—Ä
	@echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ MCP Search —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-search && docker-compose down
	@echo "‚úÖ MCP Search —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"

search-restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å MCP Search —Å–µ—Ä–≤–µ—Ä
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ MCP Search —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-search && docker-compose restart
	@echo "‚úÖ MCP Search —Å–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!"

search-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ MCP Search —Å–µ—Ä–≤–µ—Ä–∞
	@echo "üìÑ –õ–æ–≥–∏ MCP Search —Å–µ—Ä–≤–µ—Ä–∞:"
	cd mcp-search && docker-compose logs -f

search-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å MCP Search –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	@echo "üìä –°—Ç–∞—Ç—É—Å MCP Search —Å–µ—Ä–≤–µ—Ä–∞:"
	cd mcp-search && docker-compose ps

search-test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã MCP Search –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ MCP Search..."
	cd mcp-search && docker-compose exec mcp-search uv run pytest test/test_search_api.py -v || \
	docker run --rm -v $(PWD)/mcp-search:/app -w /app mcp-search:latest uv run pytest test/test_search_api.py -v
	@echo "‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"

search-shell: ## –û—Ç–∫—Ä—ã—Ç—å shell –≤ MCP Search –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üêö –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MCP Search –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É..."
	cd mcp-search && docker-compose exec mcp-search /bin/bash || \
	docker run --rm -it -v $(PWD)/mcp-search:/app -w /app mcp-search:latest /bin/bash

search-clean: ## –û—á–∏—Å—Ç–∏—Ç—å Docker —Ä–µ—Å—É—Ä—Å—ã MCP Search
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
	cd mcp-search && docker-compose down -v --remove-orphans
	docker rmi mcp-search:latest 2>/dev/null || true
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

search-dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å MCP Search –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üîß –ó–∞–ø—É—Å–∫ MCP Search –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	cd mcp-search && docker-compose -f docker-compose.yml up --build

search-health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ MCP Search —Å–µ—Ä–≤–µ—Ä–∞
	@echo "ü©∫ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è MCP Search —Å–µ—Ä–≤–µ—Ä–∞..."
	@curl -s -I http://localhost:8002/sse | head -1 || echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

search-demo: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é MCP Search
	@echo "üé≠ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è MCP Search..."
	cd mcp-search && docker-compose exec mcp-search make test-demo || \
	docker run --rm -v $(PWD)/mcp-search:/app -w /app mcp-search:latest uv run python test/test_tools.py

# =============================================================================
# MCP IP Server Commands
# =============================================================================

ip-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑ –¥–ª—è MCP IP —Å–µ—Ä–≤–µ—Ä–∞
	@echo "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞ –¥–ª—è MCP IP..."
	cd mcp-ip && docker build -t mcp-ip:latest .
	@echo "‚úÖ Docker –æ–±—Ä–∞–∑ mcp-ip:latest –≥–æ—Ç–æ–≤!"

ip-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å MCP IP —Å–µ—Ä–≤–µ—Ä –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üöÄ –ó–∞–ø—É—Å–∫ MCP IP —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-ip && docker-compose up -d
	@echo "‚úÖ MCP IP —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!"
	@echo "üåê –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8003"
	@echo "üì° SSE endpoint: http://localhost:8003/sse"
	@echo "üìß Messages endpoint: http://localhost:8003/messages/"

ip-run-build: ## –°–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å MCP IP —Å–µ—Ä–≤–µ—Ä
	@echo "üî® –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ MCP IP —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-ip && docker-compose up -d --build
	@echo "‚úÖ MCP IP —Å–µ—Ä–≤–µ—Ä —Å–æ–±—Ä–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω!"
	@echo "üåê –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8003"

ip-stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å MCP IP —Å–µ—Ä–≤–µ—Ä
	@echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ MCP IP —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-ip && docker-compose down
	@echo "‚úÖ MCP IP —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"

ip-restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å MCP IP —Å–µ—Ä–≤–µ—Ä
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ MCP IP —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-ip && docker-compose restart
	@echo "‚úÖ MCP IP —Å–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!"

ip-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ MCP IP —Å–µ—Ä–≤–µ—Ä–∞
	@echo "üìÑ –õ–æ–≥–∏ MCP IP —Å–µ—Ä–≤–µ—Ä–∞:"
	cd mcp-ip && docker-compose logs -f

ip-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å MCP IP –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	@echo "üìä –°—Ç–∞—Ç—É—Å MCP IP —Å–µ—Ä–≤–µ—Ä–∞:"
	cd mcp-ip && docker-compose ps

ip-test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã MCP IP –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ MCP IP..."
	cd mcp-ip && docker-compose exec mcp-ip uv run pytest test/test_ip_api.py -v || \
	docker run --rm -v $(PWD)/mcp-ip:/app -w /app mcp-ip:latest uv run pytest test/test_ip_api.py -v
	@echo "‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"

ip-shell: ## –û—Ç–∫—Ä—ã—Ç—å shell –≤ MCP IP –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üêö –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MCP IP –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É..."
	cd mcp-ip && docker-compose exec mcp-ip /bin/bash || \
	docker run --rm -it -v $(PWD)/mcp-ip:/app -w /app mcp-ip:latest /bin/bash

ip-clean: ## –û—á–∏—Å—Ç–∏—Ç—å Docker —Ä–µ—Å—É—Ä—Å—ã MCP IP
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
	cd mcp-ip && docker-compose down -v --remove-orphans
	docker rmi mcp-ip:latest 2>/dev/null || true
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

ip-dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å MCP IP –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üîß –ó–∞–ø—É—Å–∫ MCP IP –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	cd mcp-ip && docker-compose -f docker-compose.yml up --build

ip-health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ MCP IP —Å–µ—Ä–≤–µ—Ä–∞
	@echo "ü©∫ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è MCP IP —Å–µ—Ä–≤–µ—Ä–∞..."
	@curl -s -I http://localhost:8003/sse | head -1 || echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

ip-demo: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é MCP IP
	@echo "üé≠ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è MCP IP..."
	cd mcp-ip && docker-compose exec mcp-ip make test-demo || \
	docker run --rm -v $(PWD)/mcp-ip:/app -w /app mcp-ip:latest uv run python test/test_tools.py

# =============================================================================
# MCP Yandex Search Server Commands
# =============================================================================

yandex-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑ –¥–ª—è MCP Yandex Search —Å–µ—Ä–≤–µ—Ä–∞
	@echo "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞ –¥–ª—è MCP Yandex Search..."
	cd mcp-yandex-search && docker build -t mcp-yandex-search:latest .
	@echo "‚úÖ Docker –æ–±—Ä–∞–∑ mcp-yandex-search:latest –≥–æ—Ç–æ–≤!"

yandex-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å MCP Yandex Search —Å–µ—Ä–≤–µ—Ä –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üöÄ –ó–∞–ø—É—Å–∫ MCP Yandex Search —Å–µ—Ä–≤–µ—Ä–∞..."
	@if [ -z "$$YANDEX_API_KEY" ] || [ -z "$$YANDEX_FOLDER_ID" ]; then \
		echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"; \
		echo "   export YANDEX_API_KEY='your_api_key'"; \
		echo "   export YANDEX_FOLDER_ID='your_folder_id'"; \
		echo ""; \
	fi
	cd mcp-yandex-search && docker-compose up -d
	@echo "‚úÖ MCP Yandex Search —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!"
	@echo "üåê –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8006"
	@echo "üì° SSE endpoint: http://localhost:8006/sse"
	@echo "üìß Messages endpoint: http://localhost:8006/messages/"

yandex-run-build: ## –°–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å MCP Yandex Search —Å–µ—Ä–≤–µ—Ä
	@echo "üî® –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ MCP Yandex Search —Å–µ—Ä–≤–µ—Ä–∞..."
	@if [ -z "$$YANDEX_API_KEY" ] || [ -z "$$YANDEX_FOLDER_ID" ]; then \
		echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"; \
		echo "   export YANDEX_API_KEY='your_api_key'"; \
		echo "   export YANDEX_FOLDER_ID='your_folder_id'"; \
		echo ""; \
	fi
	cd mcp-yandex-search && docker-compose up -d --build
	@echo "‚úÖ MCP Yandex Search —Å–µ—Ä–≤–µ—Ä —Å–æ–±—Ä–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω!"
	@echo "üåê –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8006"

yandex-stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å MCP Yandex Search —Å–µ—Ä–≤–µ—Ä
	@echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ MCP Yandex Search —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-yandex-search && docker-compose down
	@echo "‚úÖ MCP Yandex Search —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"

yandex-restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å MCP Yandex Search —Å–µ—Ä–≤–µ—Ä
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ MCP Yandex Search —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-yandex-search && docker-compose restart
	@echo "‚úÖ MCP Yandex Search —Å–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!"

yandex-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ MCP Yandex Search —Å–µ—Ä–≤–µ—Ä–∞
	@echo "üìÑ –õ–æ–≥–∏ MCP Yandex Search —Å–µ—Ä–≤–µ—Ä–∞:"
	cd mcp-yandex-search && docker-compose logs -f

yandex-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å MCP Yandex Search –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	@echo "üìä –°—Ç–∞—Ç—É—Å MCP Yandex Search —Å–µ—Ä–≤–µ—Ä–∞:"
	cd mcp-yandex-search && docker-compose ps

yandex-test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã MCP Yandex Search –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ MCP Yandex Search..."
	cd mcp-yandex-search && docker-compose exec mcp-yandex-search uv run pytest test/test_yandex_api.py -v || \
	docker run --rm -v $(PWD)/mcp-yandex-search:/app -w /app mcp-yandex-search:latest uv run pytest test/test_yandex_api.py -v
	@echo "‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"

yandex-shell: ## –û—Ç–∫—Ä—ã—Ç—å shell –≤ MCP Yandex Search –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üêö –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MCP Yandex Search –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É..."
	cd mcp-yandex-search && docker-compose exec mcp-yandex-search /bin/bash || \
	docker run --rm -it -v $(PWD)/mcp-yandex-search:/app -w /app mcp-yandex-search:latest /bin/bash

yandex-clean: ## –û—á–∏—Å—Ç–∏—Ç—å Docker —Ä–µ—Å—É—Ä—Å—ã MCP Yandex Search
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
	cd mcp-yandex-search && docker-compose down -v --remove-orphans
	docker rmi mcp-yandex-search:latest 2>/dev/null || true
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

yandex-dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å MCP Yandex Search –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üîß –ó–∞–ø—É—Å–∫ MCP Yandex Search –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	cd mcp-yandex-search && docker-compose -f docker-compose.yml up --build

yandex-health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ MCP Yandex Search —Å–µ—Ä–≤–µ—Ä–∞
	@echo "ü©∫ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è MCP Yandex Search —Å–µ—Ä–≤–µ—Ä–∞..."
	@curl -s -I http://localhost:8006/sse | head -1 || echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

yandex-demo: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é MCP Yandex Search
	@echo "üé≠ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è MCP Yandex Search..."
	@if [ -z "$$YANDEX_API_KEY" ] || [ -z "$$YANDEX_FOLDER_ID" ]; then \
		echo "‚ö†Ô∏è  –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"; \
		echo "   export YANDEX_API_KEY='your_api_key'"; \
		echo "   export YANDEX_FOLDER_ID='your_folder_id'"; \
	fi
	cd mcp-yandex-search && docker-compose exec mcp-yandex-search make test-demo || \
	docker run --rm -v $(PWD)/mcp-yandex-search:/app -w /app -e YANDEX_API_KEY -e YANDEX_FOLDER_ID mcp-yandex-search:latest uv run python test/test_tools.py

# =============================================================================
# MCP Artifact Registry Server Commands
# =============================================================================

ar-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑ –¥–ª—è MCP Artifact Registry —Å–µ—Ä–≤–µ—Ä–∞
	@echo "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞ –¥–ª—è MCP Artifact Registry..."
	cd mcp-artifact-registry && docker build -t mcp-artifact-registry:latest .
	@echo "‚úÖ Docker –æ–±—Ä–∞–∑ mcp-artifact-registry:latest –≥–æ—Ç–æ–≤!"

ar-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å MCP Artifact Registry —Å–µ—Ä–≤–µ—Ä –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üöÄ –ó–∞–ø—É—Å–∫ MCP Artifact Registry —Å–µ—Ä–≤–µ—Ä–∞..."
	@if [ -z "$$CLOUD_RU_KEY_ID" ] || [ -z "$$CLOUD_RU_SECRET" ]; then \
		echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"; \
		echo "   export CLOUD_RU_KEY_ID='your_key_id'"; \
		echo "   export CLOUD_RU_SECRET='your_secret'"; \
		echo ""; \
	fi
	cd mcp-artifact-registry && docker-compose up -d
	@echo "‚úÖ MCP Artifact Registry —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!"
	@echo "üåê –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8004"
	@echo "üì° SSE endpoint: http://localhost:8004/sse"
	@echo "üìß Messages endpoint: http://localhost:8004/messages/"

ar-run-build: ## –°–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å MCP Artifact Registry —Å–µ—Ä–≤–µ—Ä
	@echo "üî® –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ MCP Artifact Registry —Å–µ—Ä–≤–µ—Ä–∞..."
	@if [ -z "$$CLOUD_RU_KEY_ID" ] || [ -z "$$CLOUD_RU_SECRET" ]; then \
		echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"; \
		echo "   export CLOUD_RU_KEY_ID='your_key_id'"; \
		echo "   export CLOUD_RU_SECRET='your_secret'"; \
		echo ""; \
	fi
	cd mcp-artifact-registry && docker-compose up -d --build
	@echo "‚úÖ MCP Artifact Registry —Å–µ—Ä–≤–µ—Ä —Å–æ–±—Ä–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω!"
	@echo "üåê –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8004"

ar-stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å MCP Artifact Registry —Å–µ—Ä–≤–µ—Ä
	@echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ MCP Artifact Registry —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-artifact-registry && docker-compose down
	@echo "‚úÖ MCP Artifact Registry —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"

ar-restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å MCP Artifact Registry —Å–µ—Ä–≤–µ—Ä
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ MCP Artifact Registry —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-artifact-registry && docker-compose restart
	@echo "‚úÖ MCP Artifact Registry —Å–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!"

ar-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ MCP Artifact Registry —Å–µ—Ä–≤–µ—Ä–∞
	@echo "üìÑ –õ–æ–≥–∏ MCP Artifact Registry —Å–µ—Ä–≤–µ—Ä–∞:"
	cd mcp-artifact-registry && docker-compose logs -f

ar-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å MCP Artifact Registry –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	@echo "üìä –°—Ç–∞—Ç—É—Å MCP Artifact Registry —Å–µ—Ä–≤–µ—Ä–∞:"
	cd mcp-artifact-registry && docker-compose ps

ar-test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã MCP Artifact Registry –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ MCP Artifact Registry..."
	cd mcp-artifact-registry && docker-compose exec mcp-artifact-registry uv run pytest test/test_ar_api.py -v || \
	docker run --rm -v $(PWD)/mcp-artifact-registry:/app -w /app mcp-artifact-registry:latest uv run pytest test/test_ar_api.py -v
	@echo "‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"

ar-test-integration: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
	@echo "üß™ –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ MCP Artifact Registry..."
	@if [ -z "$$CLOUD_RU_KEY_ID" ] || [ -z "$$CLOUD_RU_SECRET" ] || [ -z "$$TEST_PROJECT_ID" ]; then \
		echo "‚ö†Ô∏è  –î–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:"; \
		echo "   export CLOUD_RU_KEY_ID='your_key_id'"; \
		echo "   export CLOUD_RU_SECRET='your_secret'"; \
		echo "   export TEST_PROJECT_ID='your_project_uuid'"; \
		echo ""; \
	fi
	cd mcp-artifact-registry && docker-compose exec mcp-artifact-registry uv run pytest test/test_integration.py -v -m integration || \
	docker run --rm -v $(PWD)/mcp-artifact-registry:/app -w /app -e CLOUD_RU_KEY_ID -e CLOUD_RU_SECRET -e TEST_PROJECT_ID mcp-artifact-registry:latest uv run pytest test/test_integration.py -v -m integration

ar-shell: ## –û—Ç–∫—Ä—ã—Ç—å shell –≤ MCP Artifact Registry –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üêö –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MCP Artifact Registry –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É..."
	cd mcp-artifact-registry && docker-compose exec mcp-artifact-registry /bin/bash || \
	docker run --rm -it -v $(PWD)/mcp-artifact-registry:/app -w /app mcp-artifact-registry:latest /bin/bash

ar-clean: ## –û—á–∏—Å—Ç–∏—Ç—å Docker —Ä–µ—Å—É—Ä—Å—ã MCP Artifact Registry
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
	cd mcp-artifact-registry && docker-compose down -v --remove-orphans
	docker rmi mcp-artifact-registry:latest 2>/dev/null || true
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

ar-dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å MCP Artifact Registry –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üîß –ó–∞–ø—É—Å–∫ MCP Artifact Registry –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	cd mcp-artifact-registry && docker-compose -f docker-compose.yml up --build

ar-health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ MCP Artifact Registry —Å–µ—Ä–≤–µ—Ä–∞
	@echo "ü©∫ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è MCP Artifact Registry —Å–µ—Ä–≤–µ—Ä–∞..."
	@curl -s -I http://localhost:8004/sse | head -1 || echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

ar-demo: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é MCP Artifact Registry
	@echo "üé≠ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è MCP Artifact Registry..."
	@if [ -z "$$CLOUD_RU_KEY_ID" ] || [ -z "$$CLOUD_RU_SECRET" ]; then \
		echo "‚ö†Ô∏è  –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"; \
		echo "   export CLOUD_RU_KEY_ID='your_key_id'"; \
		echo "   export CLOUD_RU_SECRET='your_secret'"; \
		echo "   export TEST_PROJECT_ID='your_project_uuid' (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"; \
	fi
	cd mcp-artifact-registry && docker-compose exec mcp-artifact-registry make test-demo || \
	docker run --rm -v $(PWD)/mcp-artifact-registry:/app -w /app -e CLOUD_RU_KEY_ID -e CLOUD_RU_SECRET -e TEST_PROJECT_ID mcp-artifact-registry:latest uv run python test/test_tools.py

ar-env-check: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Artifact Registry
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è MCP Artifact Registry:"
	cd mcp-artifact-registry && make env-check

# =============================================================================
# MCP UFC Server Commands
# =============================================================================

ufc-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑ –¥–ª—è MCP UFC —Å–µ—Ä–≤–µ—Ä–∞
	@echo "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞ –¥–ª—è MCP UFC..."
	cd mcp-ufc && docker build -t mcp-ufc:latest .
	@echo "‚úÖ Docker –æ–±—Ä–∞–∑ mcp-ufc:latest –≥–æ—Ç–æ–≤!"

ufc-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å MCP UFC —Å–µ—Ä–≤–µ—Ä –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üöÄ –ó–∞–ø—É—Å–∫ MCP UFC —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-ufc && docker-compose up -d
	@echo "‚úÖ MCP UFC —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!"
	@echo "üåê –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8005"
	@echo "üì° SSE endpoint: http://localhost:8005/sse"
	@echo "üìß Messages endpoint: http://localhost:8005/messages/"

ufc-run-build: ## –°–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å MCP UFC —Å–µ—Ä–≤–µ—Ä
	@echo "üî® –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ MCP UFC —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-ufc && docker-compose up -d --build
	@echo "‚úÖ MCP UFC —Å–µ—Ä–≤–µ—Ä —Å–æ–±—Ä–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω!"
	@echo "üåê –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8005"

ufc-stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å MCP UFC —Å–µ—Ä–≤–µ—Ä
	@echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ MCP UFC —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-ufc && docker-compose down
	@echo "‚úÖ MCP UFC —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"

ufc-restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å MCP UFC —Å–µ—Ä–≤–µ—Ä
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ MCP UFC —Å–µ—Ä–≤–µ—Ä–∞..."
	cd mcp-ufc && docker-compose restart
	@echo "‚úÖ MCP UFC —Å–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!"

ufc-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ MCP UFC —Å–µ—Ä–≤–µ—Ä–∞
	@echo "üìÑ –õ–æ–≥–∏ MCP UFC —Å–µ—Ä–≤–µ—Ä–∞:"
	cd mcp-ufc && docker-compose logs -f

ufc-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å MCP UFC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	@echo "üìä –°—Ç–∞—Ç—É—Å MCP UFC —Å–µ—Ä–≤–µ—Ä–∞:"
	cd mcp-ufc && docker-compose ps

ufc-test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã MCP UFC –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ MCP UFC..."
	cd mcp-ufc && docker-compose exec mcp-ufc uv run pytest test/ -v || \
	docker run --rm -v $(PWD)/mcp-ufc:/app -w /app mcp-ufc:latest uv run pytest test/ -v
	@echo "‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"

ufc-shell: ## –û—Ç–∫—Ä—ã—Ç—å shell –≤ MCP UFC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üêö –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MCP UFC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É..."
	cd mcp-ufc && docker-compose exec mcp-ufc /bin/bash || \
	docker run --rm -it -v $(PWD)/mcp-ufc:/app -w /app mcp-ufc:latest /bin/bash

ufc-clean: ## –û—á–∏—Å—Ç–∏—Ç—å Docker —Ä–µ—Å—É—Ä—Å—ã MCP UFC
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
	cd mcp-ufc && docker-compose down -v --remove-orphans
	docker rmi mcp-ufc:latest 2>/dev/null || true
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

ufc-dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å MCP UFC –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üîß –ó–∞–ø—É—Å–∫ MCP UFC –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	cd mcp-ufc && docker-compose -f docker-compose.yml up --build

ufc-health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ MCP UFC —Å–µ—Ä–≤–µ—Ä–∞
	@echo "ü©∫ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è MCP UFC —Å–µ—Ä–≤–µ—Ä–∞..."
	@curl -s -I http://localhost:8005/sse | head -1 || echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

ufc-demo: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é MCP UFC
	@echo "üé≠ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è MCP UFC..."
	cd mcp-ufc && docker-compose exec mcp-ufc make demo || \
	docker run --rm -v $(PWD)/mcp-ufc:/app -w /app mcp-ufc:latest uv run python test/test_tools.py

# =============================================================================
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏
# =============================================================================

start-all: weather-run search-run ip-run yandex-run ar-run ufc-run ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ MCP —Å–µ—Ä–≤–µ—Ä—ã
	@echo "üöÄ –í—Å–µ MCP —Å–µ—Ä–≤–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã!"

stop-all: weather-stop search-stop ip-stop yandex-stop ar-stop ufc-stop ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ MCP —Å–µ—Ä–≤–µ—Ä—ã
	@echo "‚èπÔ∏è  –í—Å–µ MCP —Å–µ—Ä–≤–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"

clean-all: weather-clean search-clean ip-clean yandex-clean ar-clean ufc-clean ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ Docker —Ä–µ—Å—É—Ä—Å—ã
	@echo "üßπ –í—Å–µ —Ä–µ—Å—É—Ä—Å—ã –æ—á–∏—â–µ–Ω—ã!"

# =============================================================================
# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
# =============================================================================

list-services: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö MCP —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ MCP —Å–µ—Ä–≤–∏—Å—ã:"
	@echo "  üå§Ô∏è  mcp-weather - –°–µ—Ä–≤–µ—Ä –ø–æ–≥–æ–¥—ã (–ø–æ—Ä—Ç 8001)"
	@echo "  üîç mcp-search - –°–µ—Ä–≤–µ—Ä –ø–æ–∏—Å–∫–∞ (–ø–æ—Ä—Ç 8002)"
	@echo "  üåê mcp-ip - –°–µ—Ä–≤–µ—Ä IP-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–ø–æ—Ä—Ç 8003)"
	@echo "  üîç mcp-yandex-search - Yandex –ø–æ–∏—Å–∫ (–ø–æ—Ä—Ç 8006)"
	@echo "  üèõÔ∏è  mcp-artifact-registry - Cloud.ru Artifact Registry (–ø–æ—Ä—Ç 8004)"
	@echo "  ü•ä mcp-ufc - UFC –∏ MMA —Å–µ—Ä–≤–µ—Ä (–ø–æ—Ä—Ç 8005)"
	@echo ""
	@echo "üí° –ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
	@echo "  üìä mcp-analytics - –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö"  
	@echo "  üóÑÔ∏è  mcp-database - –†–∞–±–æ—Ç–∞ —Å –ë–î"
	@echo "  üîó mcp-api - REST API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"

ports: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–æ—Ä—Ç—ã
	@echo "üîå –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–æ—Ä—Ç—ã:"
	@echo "  8001 - MCP Weather Server"
	@echo "  8002 - MCP Search Server"
	@echo "  8003 - MCP IP Server"
	@echo "  8004 - MCP Artifact Registry Server"
	@echo "  8005 - MCP UFC Server"
	@docker ps --format "table {{.Names}}\t{{.Ports}}" | grep -E "(mcp-|PORTS)" || true 